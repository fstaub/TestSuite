(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
<<sarah4/SARAH.m


(* ::Input::Initialization:: *)
Start["Generalised_GM"]


(* ::Input::Initialization:: *)
CalcRGEs[TwoLoop->False]


(* ::Input::Initialization:: *)
outRGEs=OpenWrite["GM_RGEs_debug.txt"];


(* ::Input::Initialization:: *)
Bmu1=mu1/2(8lam+16 sig3-3 g1^2-21 g2^2+12 Yt^2+12 Yb^2)+16 mu2 sig4-2 mu3 sig2;
Bmu2=4 mu1 sig4+mu2/2(8lam+8 sig1+12 sig2-9 g1^2-21 g2^2+12 Yt^2+12 Yb^2)-2 mu3 sig4;
Bmu3=-2 mu1 sig2-8 mu2 sig4+2 mu3 (2 rho1+4 rho2+4 rho4-2 rho5-3 g1^2-9g2^2);


(* ::Input::Initialization:: *)
{BetaTijk[[1,2]],Expand[Bmu2 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->Yt /. Yd->Yb /.Ye->0 /. conj[x_]->x;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaTijk[[1,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaTijk[[1,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{BetaTijk[[2,2]],Expand[Bmu1 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->Yt /. Yd->Yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaTijk[[2,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaTijk[[2,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{BetaTijk[[3,2]],Expand[Bmu3 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->Yt /. Yd->Yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaTijk[[3,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaTijk[[3,1]]]<>" error \n"];
];



(* ::Input::Initialization:: *)
Blam=3/8 (3 g2^4+2g2^2g1^2+g1^4)+24lam^2-6 (yt^4+yb^4)+3 sig1^2+3 sig1 sig2+5/4 sig2^2+6 sig3^2+2 sig4^2-3lam(g1^2+3 g2^2-4yt^2-4yb^2);

Brho1=15 g2^4-12 g1^2 g2^2+6 g1^4+28 rho1^2+24 rho1 rho2+6 rho2^2+6 rho4^2+4 rho4 rho5+3rho5^2+2 sig1^2+2 sig1 sig2-12rho1(g1^2+2g2^2);

Brho2=24 g1^2 g2^2-6 g2^4+24rho1 rho2+18 rho2^2-2 rho5^2+sig2^2-12 rho2 (2g2^2+g1^2);

Brho3=2 (3 g2^4+22 rho3^2+3 rho4^2+2rho4 rho5+rho5^2+2 sig3^2-12 g2^2 rho3);

Brho4=2 (3 g2^4+rho4 (8 rho1+6 rho2+10 rho3+4rho4)+2 rho5 (rho1+rho2+rho3)+rho5^2+2 sig1 sig3+sig2 sig3+sig4^2-3rho4(g1^2+4 g2^2));

Brho5=2 (3 g2^4+rho5 (2 rho1+4 rho3+8 rho4+5rho5)-sig4^2-3rho5(4 g2^2+g1^2));

Bsig1=3 g1^4-6g1^2g2^2+6 g2^4+2 sig1 (6 lam+8 rho1+6 rho2+2sig1)+2 sig2 (2 lam+3 rho1+rho2)+2(6 rho4 sig3+2rho5 sig3+sig4^2)+sig2^2-3/2 sig1(5g1^2+11g2^2-4yt^2-4yb^2);

Bsig2=12g1^2g2^2+4sig2(lam+rho1+2 (rho2+sig1)+sig2)+4 sig4^2-3/2 sig2(5g1^2+11g2^2-4 yt^2-4yb^2);

Bsig3=3 g2^4+2sig3(6 lam+10 rho3+4 sig3)+(3 rho4+rho5) (2sig1+sig2)+4 sig4^2-3/2 sig3(g1^2+11 g2^2-4yt^2-4yb^2);

Bsig4=sig4/2 (4 (2 lam+2rho4-rho5+2sig1+2sig2+4sig3)-3(3g1^2+11 g2^2-4yt^2-4yb^2));


(* ::Input::Initialization:: *)
{BetaLijkl[[4,2]],Expand[Blam /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[4,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[4,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[1,2]]],Expand[Bsig4 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[1,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[1,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[ BetaLijkl[[2,2]]],Expand[Brho3 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[2,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[2,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[3,2]]],Expand[Bsig3 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[3,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[3,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[5,2]]],Expand[Bsig2 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[5,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[5,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[6,2]]],Expand[Brho5 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[6,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[6,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[7,2]]],Expand[Brho4 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[7,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[7,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[8,2]]],Expand[Bsig1/. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[8,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[8,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[9,2]]],Expand[Brho2 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x ;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[9,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[9,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
{Expand[BetaLijkl[[10,2]]],Expand[Brho1 /. g1->Sqrt[3/5] g1    ]  }/. lam->Lambda1 /.trace->Times /. Adj[x_]->x /. Yu->yt /. Yd->yb /.Ye->0 /. conj[x_]->x;
If[Expand[%[[1]]-%[[2]]]===0,
WriteString[outRGEs,ToString[BetaLijkl[[10,1]]]<>" correct \n"];,
WriteString[outRGEs,ToString[BetaLijkl[[10,1]]]<>" error \n"];
];


(* ::Input::Initialization:: *)
Close[outRGEs];



